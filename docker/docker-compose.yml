version: '3'
services:
  adalite-backend:
    container_name: ${COMPOSE_PROJECT_NAME}-service
    build: ..
    ports:
      - ${ADALITE_BACKEND_HOST_PORT}:8080
    command: ["./wait-for-it.sh", "icarus-db:5432", "--", "/bin/sh", "-c", "yarn knex migrate:latest && yarn start >> /var/log/app/server.log 2>&1"]
    volumes:
      - ${DATA_PATH}/adalite-backend:/var/log/app
    depends_on:
      - icarus-db
    environment:
      DB: cardano_mainnet
      DB_PORT: 5432
      DB_HOST: icarus-db
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      DB_USER: postgres
      CORS_ENABLED_FOR: ${CORS_ENABLED_FOR}
      IMPORTER_ENDPOINT: http://icarus-importer:8200/api/txs/signed
      SLACK_TOKEN: ${SLACK_TOKEN}
      SLACK_CHANNEL: ${SLACK_CHANNEL}
  icarus-importer:
    container_name: ${COMPOSE_PROJECT_NAME}-importer
    image: refi93/project-icarus-importer:latest
    ports:
      - ${ICARUS_IMPORTER_HOST_PORT}:8200
    volumes:
      - ${DATA_PATH}/icarus-importer:/wallet/mainnet
    depends_on:
      - adalite-backend
    command: wait-for-it.sh adalite-backend:8080 -t 3600 -- cardano-start -- --runtime-args "--postgres-name cardano_mainnet --postgres-user postgres --postgres-password ${POSTGRES_PASSWORD} --postgres-host icarus-db --postgres-port 5432 --no-tls ${ICARUS_IMPORTER_PARAMS}"
  icarus-db:
    container_name: ${COMPOSE_PROJECT_NAME}-db
    image: postgres
    ports:
      - ${DB_HOST_PORT}:5432
    volumes:
      - ${DATA_PATH}/icarus-db:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: postgres
      POSTGRES_DB: cardano_mainnet

